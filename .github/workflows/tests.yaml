name: Run tests
on: [ push ]
jobs:
  sanity:
    strategy:
      matrix:
        ansible:
          - stable-2.9
          - stable-2.10
          - stable-2.11
          - stable-2.12
          - stable-2.13
          - stable-2.14
          - devel
    runs-on: >-
      ${{ contains(fromJson(
          '["stable-2.9", "stable-2.10", "stable-2.11"]'
      ), matrix.ansible) && 'ubuntu-20.04' || 'ubuntu-latest' }}
    steps:
      - name: Sanity tests
        uses: ansible-community/ansible-test-gh-action@release/v1
        with:
          ansible-core-version: ${{ matrix.ansible }}
          testing-type: sanity

  integration:
    runs-on: ubuntu-latest
    services:
        pebble:
          image: letsencrypt/pebble
          env:
            PEBBLE_VA_NOSLEEP: 1
            PEBBLE_VA_ALWAYS_VALID: 1
        challtestsrv:
           image: letsencrypt/pebble-challtestsrv
    strategy:
      fail-fast: false
      matrix:
        target:
          - webserver
          - https
        ansible:
          - stable-2.12
          - stable-2.13
          - stable-2.14
          - devel
        target-image: [ubuntu2004, ubuntu2204]
        exclude:
        # image 2204 not available before ansible 2.14
        - ansible: stable-2.12
          target-image: ubuntu2204
        - ansible: stable-2.13
          target-image: ubuntu2204

    steps:
      - name: Cache pip
        id: cache-pip
        uses: actions/cache@v3
        with:
          path: .cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.ansible }}

      - name: Integration tests
        uses: ansible-community/ansible-test-gh-action@release/v1
        with:
          ansible-core-version: ${{ matrix.ansible }}
          docker-image: ${{ matrix.target-image }}
          target-python-version: ${{ matrix.target-image == 'ubuntu2004' && '3.8' || '3.10' }}
          target: ${{ matrix.target }}
          testing-type: integration
          test-deps: >-
            community.general
